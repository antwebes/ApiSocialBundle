define(["apps/channels/list/list_controller","apps/channels/list/user_channels_controller","apps/channels/show/show_controller","apps/chat/show/show_controller","app","apps/channels/test/fixtures","apps/users/test/fixtures","util/testutils","apps/channels/channels_app","jasmine-fixture",window.kiwi_server+"/kiwi/assets/libs/engine.io.js"],function(e,t,n,r,i,s,o){return $.fn.exists=function(){return this.length>0},describe("ChannelsApp.Controller",function(){var r=this,u=function(e){var t=$.Deferred(),n=t.promise();return t.resolve(e),n};beforeEach(function(){var e=u(o.user1);this.stub=sinon.stub(i,"request"),this.stub.withArgs("user:entity",1).returns(e),this.stub.withArgs("channel:entities:outstanding").returns(u(s.outstandings)),this.stub.withArgs("chat:show"),r.incrementChannelVisit=!1,r.filtered=!1,sinon.stub(jQuery,"ajax",function(e){if(e.type=="POST")e.success({});else if(e.url==window.api_endpoint+"/api/channels/31/visits"&&e.type=="PUT")r.incrementChannelVisit=!0;else if(e.url==window.api_endpoint+"/api/channels"||e.url==window.api_endpoint+"/api/users/1/channels"||e.url==window.api_endpoint+"/api/users/1/moderated"||e.url==window.api_endpoint+"/api/users/1/channelsFan")if(e.data&&e.data.filter&&e.data.filter=="channelType=locale"&&e.url!=window.api_endpoint+"/api/users/1/channels"&&e.url!=window.api_endpoint+"/api/users/1/moderated"&&e.url!=window.api_endpoint+"/api/users/1/channelsFan")r.filtered=!0;else{var t={resources:s.collection.toJSON(),total:30,limit:30,offset:0,count:30,totalPages:2};e.data.offset&&(t.resources=t.resources.slice(e.data.offset,e.data.offset+e.data.limit)),e.success(t)}else e.url==window.api_endpoint+"/api/channels?filter=channelType=locale"&&(r.filtered=!0)})}),afterEach(function(){jQuery.ajax.restore(),this.stub.restore(),r.incrementChannelVisit=!1,r.filtered=!1}),describe("List outstanding Channels",function(){beforeEach(function(){e.listOutstandingChannels()}),it("should show all outstanding channels",function(){ensureNumberOfElementsArePresent('h3:contains("Room outstanding_1")',1),ensureNumberOfElementsArePresent('h3:contains("Room outstanding_2")',1),ensureNumberOfElementsArePresent('h3:contains("Room outstanding_3")',1),ensureNumberOfElementsArePresent('h3:contains("Room outstanding_4")',1),ensureNumberOfElementsArePresent('a[href="/rooms/list"]:contains("List all rooms")',1)})}),describe("List Channels",function(){it("should show list of channels",function(){e.listChannels(),waitsForSpyToBeCalled(jQuery.ajax),runs(function(){expect(jQuery.ajax).toHaveBeenCalled(),expect($(".col-lg-6").length).toEqual(12),expect($.trim($("h3").first().text())).toEqual("Room channel_1"),expect($(".page").last().html()).toEqual("3"),expect($("h3 a").first().attr("href")).toMatch("/channel_1"),$(".page").last().trigger("click"),ensureNumberOfElementsArePresent(".col-lg-6",6)})}),it("should be posible to list by channel type",function(){e.listChannels(),waitsForSpyToBeCalled(jQuery.ajax),runs(function(){$(".col-lg-6").first().find(".channel-type").first().click(),waitsFor(function(){return r.filtered}),runs(function(){expect(r.filtered).toEqual(!0)})})})}),describe("Show channel of other own",function(){beforeEach(function(){var e=u(s.channel3);this.stub.withArgs("channel:entity",3).returns(e),n.showChannel(3)}),it("should see empty box of fans",function(){ensureNumberOfElementsArePresent("#usersFans li",0)}),it("should show 0 fans in statistics",function(){waitsForPresenceOfDOMElement("#statistics-num-fans"),runs(function(){expect($("#statistics-num-fans").html().trim()).toBe("0")})}),it("should show 3 visits in statistics",function(){waitsForPresenceOfDOMElement("#statistics-num-visits"),runs(function(){expect($("#statistics-num-visits").html().trim()).toBe("3")})}),it("I should not see the tabs of edit channel",function(){expect(this.stub).toHaveBeenCalledWith("channel:entity",3),expect($("#tabEdit").length).toEqual(0)})}),describe("Show channel_with_parent of fixtures, own of alex",function(){beforeEach(function(){var e=u(s.channel_entity_new),t=u(s.channel_with_parent);this.stub.withArgs("channel:entity:new").returns(e),this.stub.withArgs("channel:entity",31).returns(t),this.stub.withArgs("channel:show:fans").returns({}),n.showChannel(31)}),it("should request the channel:entity with parameters 2 from server",function(){expect(this.stub).toHaveBeenCalledWith("channel:entity",31)}),it("should see title of channel",function(){expect($.trim($("h1").text())).toEqual("Free channel_with_parent Chat Room")}),it("should see the fans in box of fans",function(){ensureNumberOfElementsArePresent("#usersFans li",1)}),it("I should see text to chat rooms children",function(){expect($("#channels_show_container_center > div > .page-header").text()).toEqual("Children")}),describe("button go to chat",function(){var e;beforeEach(function(){i.User=new Backbone.Model({username:"user_1",username_canonical:"user_1",channels_fan:new Backbone.Collection([])}),e=sinon.stub(i,"trigger")}),afterEach(function(){e.restore()}),it("should see a button to go chat",function(){expect($("#goChat").exists()).toBe(!0)}),it("should go to the chat of the channel page when I click on it",function(){$("#goChat").trigger("click"),waitsForSpyToBeCalled(e),runs(function(){expect(e).toHaveBeenCalledWith("chat:show",{channel:"#channel_with_parent_31",nick:"user_1"})})}),it("should go to the chat of the channel page with a different specified nick when I click on it",function(){$("#username").val("supercoolnick"),$("#goChat").trigger("click"),waitsForSpyToBeCalled(e),runs(function(){expect(e).toHaveBeenCalledWith("chat:show",{channel:"#channel_with_parent_31",nick:"supercoolnick"})})}),it("should go to the chat of the channel page with a current user nick if the specified nick is blanck when I click on it",function(){$("#username").val(""),$("#goChat").trigger("click"),waitsForSpyToBeCalled(e),runs(function(){expect(e).toHaveBeenCalledWith("chat:show",{channel:"#channel_with_parent_31",nick:"user_1"})})})});var e=function(e,t){expect($(".profile-info-name:contains('"+e+"')").exists()).toBe(!0),expect($(".profile-info-value:contains('"+t+"')").exists()).toBe(!0),expect($(".profile-info-name:contains("+e+")").parent().find(".profile-info-value span").text()).toEqual(t)};it("should see the info of channel",function(){e("Irc Channel","#channel_with_parent_31"),e("Channel Type","locale"),e("Description","description_with_parent_31"),expect($("#channelInfo").find("a[title~=alex]").length).toBeGreaterThan(0)}),it("As owner of channel I should see the tabs of edit channel",function(){expect($("#tabEdit").length).toEqual(1)}),it("Should see all tabs",function(){expect($("#tabShowChannel").length).toEqual(1),expect($("#tabFans").length).toEqual(1),expect($("#tabModerators").length).toEqual(1)}),it("When click in tab fans I should see the fans",function(){$("#fans").trigger("click"),waitsForPresenceOfDOMElement(".list-unstyled"),runs(function(){expect($("#tabFans").hasClass("active")).toBe(!0),expect($("#channels_show_container_center").find("ul p").length).toEqual(1)})}),it("When click the link 'View all fans' I should see the fans",function(){$("#view-all-fans").trigger("click"),waitsForPresenceOfDOMElement(".list-unstyled"),runs(function(){expect($("#tabFans").hasClass("active")).toBe(!0),expect($("#channels_show_container_center").find("ul p").length).toEqual(1)})});var t=function(e,t,n){expect($(e).find(t).val()).toEqual(n)};it("When click in tab edit I should see the form with channel into",function(){$("#edit").trigger("click"),waitsForPresenceOfDOMElement("#form_show"),runs(function(){expect($("#tabEdit").hasClass("active")).toBe(!0),expect($(".form-group").length).toEqual(6),t(".field-name","input","channel_with_parent"),t(".field-channel_type","select","locale"),t(".field-irc_channel","input","#channel_with_parent_31"),t(".field-description","textarea","description_with_parent_31"),t(".field-language","select","es"),expect($("#commit").length).toEqual(1),expect($("#delete").length).toEqual(1),expect(this.stub).toHaveBeenCalledWith("channel:entity",31)})}),it("When I click 'Make fan' button I should see the text 'Stop being fan'",function(){$("#makeFan").trigger("click"),ensureNumberOfElementsArePresent("span#stopBeingFan:contains('Stop being fan')",1)})}),describe("Show channel_with_parent of fixtures, own of alex & with user online fan of this channel",function(){beforeEach(function(){var e=u(s.channel_entity_new),t=u(s.channel_with_parent),r=u(s.channel_with_parent.get("fans").get("888"));window.user_id=888,this.stub.withArgs("user:entity",888).returns(r),this.stub.withArgs("channel:entity:new").returns(e),this.stub.withArgs("channel:entity",31).returns(t),this.stub.withArgs("channel:show:fans").returns({}),n.showChannel(31)}),it("If I am a fan I should see the text 'Stop being fan'",function(){expect($("span#wrapMakeFanText").text()).toEqual("Stop being fan")}),it("If I click in 'Stop being fan' I should see a modal",function(){$("#stopBeingFan").trigger("click"),waitsForPresenceOfDOMElement(".modal-content"),runs(function(){expect($(".ok").exists()).toBe(!0)})})}),describe("Channels of user",function(){it("Should show the channels a user owns",function(){t.showChannelsUserOwnes(1,1),waitsForSpyToBeCalled(jQuery.ajax),runs(function(){ensureNumberOfElementsArePresent('h1:contains("Channels owned by user_1")',1),expect($(".col-lg-6").length).toEqual(12)})}),it("Should show the channels a user moderates",function(){t.showChannelsUserModerates(1,1),waitsForSpyToBeCalled(jQuery.ajax),runs(function(){ensureNumberOfElementsArePresent('h1:contains("Channels moderated by user_1")',1),expect($(".col-lg-6").length).toEqual(12)})}),it("Should show the channels a user is fan",function(){t.showChannelsUserIsFan(1,1),waitsForSpyToBeCalled(jQuery.ajax),runs(function(){ensureNumberOfElementsArePresent('h1:contains("Channels wich user_1 is fan")',1),expect($(".col-lg-6").length).toEqual(12)})})})}),{name:"channels_controller_spec"}});