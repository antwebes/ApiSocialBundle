define(["app","entities/channel","entities/profile","entities/photo"],function(e,t,n,r){return e.module("Entities",function(e,i,s,o,u,a){e.User=s.Model.extend({urlRoot:window.api_endpoint+"/api/users"}),e.ChangePassword=s.Model.extend({urlRoot:window.api_endpoint+"/api/me/change-password",schema:{current_password:{title:"Old password",validators:["required"],type:"Password"},password_first:{title:"New password",validators:["required"],type:"Password"},password_second:{title:"Repeat new password",validators:["required"],type:"Password"}},isNew:function(){return!1},toJSON:function(e){return{change_password:{current_password:this.attributes.current_password,plainPassword:{first:this.attributes.password_first,second:this.attributes.password_second}}}},sync:function(e,t,n){return n=n||{},n.url=window.api_endpoint+"/api/me/change-password",s.sync("patch",t,n)}}),e.ChangeEmail=s.Model.extend({urlRoot:window.api_endpoint+"/api/me/change-password",schema:{email:{title:"Email",validators:["required","email"]},current_password:{title:"Password",validators:["required"],type:"Password"}},isNew:function(){return!1},toJSON:function(e){return{profile:{email:this.attributes.email,current_password:this.attributes.current_password}}},sync:function(e,t,n){return n=n||{},n.url=window.api_endpoint+"/api/me",s.sync("update",t,n)}}),e.UserCollection=s.Collection.extend({model:e.User,initialize:function(e){typeof e.parameters=="undefined"&&(e.parameters="?limit=36"),e.url==undefined?this.url=window.api_endpoint+"/api/users":this.url=e.url,this.url=this.url+e.parameters},parse:function(e){return e.resources}});var f={getUserEntity:function(t){var n=u.Deferred();return requirejs(["apps/commons/pagination/paginate"],function(r){var i=new e.User({id:t});i.fetch({success:function(e){i.channels=new r.Collection({data:{url:e.attributes._links.channels.href}}),i.channels_fan=new r.Collection({data:{url:e.attributes._links.channels_fan.href}}),n.resolve(e)},error:function(e,t,r){n.reject(t)}})}),n.promise()},getUserEntityMe:function(s,o){if(o||i.User===undefined){var a=u.Deferred(),f=new e.User({id:s});return f.fetch({success:function(e){e.get("profile")&&(e.set("profile",new n.Profile(e.get("profile"))),e.get("profile").get("profile_photo")&&e.get("profile").set("profile_photo",new r.Photo(e.get("profile").get("profile_photo")))),e.set("channels_fan",new t.ChannelCollection(e.get("channels_fan"))),e.set("channels",new t.ChannelCollection(e.get("channels"))),e.set("channels_moderated",new t.ChannelCollection(e.get("channels_moderated"))),i.User=e,a.resolve(e)},error:function(e,t,n){a.reject(t)}}),a.promise()}return i.User},getUserEntities:function(t){var n=new e.UserCollection({parameters:t}),r=u.Deferred();n.fetch({success:function(e){r.resolve(e)},error:function(e,t,n){r.reject(t)}});var i=r.promise();return u.when(i).done(function(e){if(e.length===0){var t=initializeContacts();e.reset(t)}}),i},getRealTimeUserEntities:function(t){var n=new e.UserCollection({parameters:"?limit="+t,url:window.api_endpoint+"/api/realtime/users/"+t+"/random.json"}),r=u.Deferred();n.fetch({success:function(e){r.resolve(e)},error:function(e,t,n){r.reject(t)}});var i=r.promise();return u.when(i).done(function(e){if(e.length===0){var t=initializeContacts();e.reset(t)}}),i}};i.reqres.setHandler("user:entity",function(e){return f.getUserEntity(e)}),i.reqres.setHandler("user:entity:me",function(e,t){var n=typeof t!="undefined"?t:!1;return f.getUserEntityMe(e,n)}),i.reqres.setHandler("user:entity:new",function(t){return new e.User(t)}),i.reqres.setHandler("user:entities",function(e){return f.getUserEntities(e)}),i.reqres.setHandler("user:realtime:entities",function(e){return f.getRealTimeUserEntities(e)})}),e.Entities});